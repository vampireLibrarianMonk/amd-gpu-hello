 rocm-smi
    2  sudo apt update
    3  wget https://repo.radeon.com/amdgpu-install/23.20.00.48/ubuntu/jammy/amdgpu-install_5.7.00.48.50700-1_all.deb
    4  sudo apt install ./amdgpu-install_5.7.00.48.50700-1_all.deb
    5  sudo amdgpu-install -y --usecase=graphics,rocm
    6  sudo usermod -a -G render,video $LOGNAME
    7  sudo apt purge amdgpu-dkms
    8  sudo reboot
    9  # Make the directory if it doesn't exist yet.
   10  # This location is recommended by the distribution maintainers.
   11  sudo mkdir --parents --mode=0755 /etc/apt/keyrings
   12  # Download the key, convert the signing-key to a full
   13  # keyring required by apt and store in the keyring directory
   14  wget https://repo.radeon.com/rocm/rocm.gpg.key -O - |     gpg --dearmor | sudo tee /etc/apt/keyrings/rocm.gpg > /dev/null
   15  # Kernel driver repository for jammy
   16  sudo tee /etc/apt/sources.list.d/amdgpu.list <<'EOF'
   17  deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/latest/ubuntu jammy main
   18  EOF
   19  # ROCm repository for jammy
   20  sudo tee /etc/apt/sources.list.d/rocm.list <<'EOF'
   21  deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/debian jammy main
   22  EOF
   23  # Prefer packages from the rocm repository over system packages
   24  echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
   25  sudo apt update
   26  sudo apt install amdgpu-dkms
   27  sudo apt install rocm-hip-libraries
   28  sudo reboot
   29  sudo apt install "linux-headers-$(uname -r)" "linux-modules-extra-$(uname -r)"
   30  sudo usermod -a -G render,video $LOGNAME
   31  groups
   32  clear
   33  echo 'ADD_EXTRA_GROUPS=1' | sudo tee -a /etc/adduser.conf
   34  echo 'EXTRA_GROUPS=video' | sudo tee -a /etc/adduser.conf
   35  echo 'EXTRA_GROUPS=render' | sudo tee -a /etc/adduser.conf
   36  # Make the directory if it doesn't exist yet.
   37  # This location is recommended by the distribution maintainers.
   38  sudo mkdir --parents --mode=0755 /etc/apt/keyrings
   39  # Download the key, convert the signing-key to a full
   40  # keyring required by apt and store in the keyring directory
   41  wget https://repo.radeon.com/rocm/rocm.gpg.key -O - |     gpg --dearmor | sudo tee /etc/apt/keyrings/rocm.gpg > /dev/null
   42  # version
   43  ver=5.7
   44  # amdgpu repository for jammy
   45  echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/$ver/ubuntu jammy main"     | sudo tee /etc/apt/sources.list.d/amdgpu.list
   46  sudo apt update
   47  # Prefer packages from the rocm repository over system packages
   48  echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
   49  sudo apt install amdgpu-dkms
   50  sudo reboot
   51  mamba create --name pytorch-rocm python=3.10 -y
   52  mamba activate pytorch-rocm
   53  wget https://repo.radeon.com/rocm/manylinux/rocm-rel-5.7/torch-2.0.1%2Brocm5.7-cp310-cp310-linux_x86_64.whl
   54  wget https://repo.radeon.com/rocm/manylinux/rocm-rel-5.7/torchvision-0.15.2%2Brocm5.7-cp310-cp310-linux_x86_64.whl
   55  pip3 install --force-reinstall torch-2.0.1+rocm5.7-cp310-cp310-linux_x86_64.whl torchvision-0.15.2+rocm5.7-cp310-cp310-linux_x86_64.whl 
   56  python3 -c 'import torch' 2> /dev/null && echo 'Success' || echo 'Failure'
   57  python3 -c 'import torch; print(torch.cuda.is_available())'
   58  python3 -c "import torch; print(f'device name [0]:', torch.cuda.get_device_name(0))"
   59  mamba deactivate
   60  clear
   61  mamba create --name tensorflow-rocm python=3.10 -y
   62  mamba activate tensorflow-rocm
   63  pip install tensorflow-rocm
   64  python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
   65  mamba deactivate
   66  mamba env remove --name tensorflow-rocm
   67  mamba create --name tensorflow-rocm python=3.10 -y
   68  mamba activate tensorflow-rocm
   69  clear
   70  sudo apt update
   71  sudo apt install apt-transport-https curl gnupg -y
   72  curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
   73  sudo mv bazel-archive-keyring.gpg /usr/share/keyrings
   74  echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
   75  sudo apt update && sudo apt install bazel-5.4.0 -y
   76  sudo ln -s /usr/bin/bazel-5.4.0 /usr/bin/bazel
   77  sudo apt install git -y
   78  git clone --depth 1 -b r2.14-rocm-enhanced https://github.com/ROCmSoftwarePlatform/tensorflow-upstream.git
   79  cd tensorflow-upstream/
   80  gedit ensorflow/compiler/xla/stream_executor/device_description.h
   81  gedit tensorflow/compiler/xla/stream_executor/device_description.h
   82  bash build_rocm_python3
   83  ls -l /opt
   84  ls -l /opt/
   85  cd ..
   86  rm -rf tensorflow-upstream/
   87  git clone --depth 1 -b r2.15-rocm-enhanced https://github.com/ROCmSoftwarePlatform/tensorflow-upstream.git
   88  cd tensorflow-upstream/
   89  mamba deactivate
   90  mamba env remove --nam tensorflow-rocm
   91  mamba create --name tensorflow-rocm python=3.10 -y
   92  mamba activate tensorflow-rocm
   93  bash build_rocm_python3 
   94  mamba deactivate
   95  mamba env remove --nam tensorflow-rocm
   96  mamba create --name tensorflow-rocm python=3.10 -y
   97  mamba activate tensorflow-rocm
   98  pip install http://ml-ci.amd.com:21096/job/tensorflow/job/nightly-rocmfork-develop-upstream/job/nightly-build-whl/lastSuccessfulBuild/artifact/packages-3.10/tf_nightly_rocm-2.16.0.600.dev20240109-cp310-cp310-manylinux2014_x86_64.whl
   99  python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
  100  cd ~/
  101  python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
  102  pip install requests
  103  python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
  104  cd Downloads/
  105  cd amd-gpu-hello-main/
  106  python tensorflow-rocm.py 
  107  mamba deactivate
  108  mamba activate pytorch-rocm
  109  python pytorch_mnist_numbers.py 
  110  clear
  111  history
