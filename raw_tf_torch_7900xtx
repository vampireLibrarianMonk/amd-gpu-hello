# Install Ubuntu 22.4.03
# * Minimal Installation
# * Download updates

# Make the directory if it doesn't exist yet.
# This location is recommended by the distribution maintainers.
sudo mkdir --parents --mode=0755 /etc/apt/keyrings

# Download the key, convert the signing-key to a full
# keyring required by apt and store in the keyring directory
wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | \
    gpg --dearmor | sudo tee /etc/apt/keyrings/rocm.gpg > /dev/null

# Register kernel-mode driver
# Add the AMDGPU repository for the driver.
echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/6.0/ubuntu jammy main" \
    | sudo tee /etc/apt/sources.list.d/amdgpu.list
sudo apt update

# Register ROCm packages
# Add the ROCm repository.
echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/6.0 jammy main" \
    | sudo tee --append /etc/apt/sources.list.d/rocm.list
echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' \
    | sudo tee /etc/apt/preferences.d/rocm-pin-600

# Install kernel driver
sudo apt install amdgpu-dkms
sudo reboot

# Install ROCm packages
sudo apt install rocm-hip-sdk

sudo apt install "linux-headers-$(uname -r)" "linux-modules-extra-$(uname -r)"
sudo usermod -a -G render,video $LOGNAME

echo 'ADD_EXTRA_GROUPS=1' | sudo tee -a /etc/adduser.conf
echo 'EXTRA_GROUPS=video' | sudo tee -a /etc/adduser.conf
echo 'EXTRA_GROUPS=render' | sudo tee -a /etc/adduser.conf

# Make the directory if it doesn't exist yet.
# This location is recommended by the distribution maintainers.
sudo mkdir --parents --mode=0755 /etc/apt/keyrings

# Download the key, convert the signing-key to a full
# keyring required by apt and store in the keyring directory
wget https://repo.radeon.com/rocm/rocm.gpg.key -O - |     gpg --dearmor | sudo tee /etc/apt/keyrings/rocm.gpg > /dev/null
# version
ver=5.7

# amdgpu repository for jammy
echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/$ver/ubuntu jammy main"     | sudo tee /etc/apt/sources.list.d/amdgpu.list
sudo apt update

# Prefer packages from the rocm repository over system packages
echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
sudo apt install amdgpu-dkms

sudo reboot

Configure the system linker.

Instruct the system linker where to find shared objects (.so-files) for ROCm applications.

sudo tee --append /etc/ld.so.conf.d/rocm.conf <<EOF
/opt/rocm/lib
/opt/rocm/lib64
EOF
sudo ldconfig

# Configure PATH.
# Add binary paths to the PATH environment variable.
export PATH=$PATH:/opt/rocm-6.0/bin

# Verify kernel-mode driver installation.
dkms status

# Verify ROCm installation.
/opt/rocm-6.0/bin/rocminfo
/opt/rocm-6.0/bin/clinfo

# Verify package installation.
sudo apt list --installed

# Create torch mamba environment
mamba create --name pytorch-rocm python=3.10 -y
mamba activate pytorch-rocm

# Install [reference](https://rocm.docs.amd.com/projects/radeon/en/latest/docs/install/install-pytorch.html)
wget https://repo.radeon.com/rocm/manylinux/rocm-rel-5.7/torch-2.0.1%2Brocm5.7-cp310-cp310-linux_x86_64.whl
wget https://repo.radeon.com/rocm/manylinux/rocm-rel-5.7/torchvision-0.15.2%2Brocm5.7-cp310-cp310-linux_x86_64.whl
pip3 install --force-reinstall torch-2.0.1+rocm5.7-cp310-cp310-linux_x86_64.whl torchvision-0.15.2+rocm5.7-cp310-cp310-linux_x86_64.whl 

# Verify if Pytorch is installed and detecting the GPU compute device.
python3 -c 'import torch' 2> /dev/null && echo 'Success' || echo 'Failure'

# Enter command to test if the GPU is available.
python3 -c 'import torch; print(torch.cuda.is_available())'

# Enter command to display installed GPU device name.
python3 -c "import torch; print(f'device name [0]:', torch.cuda.get_device_name(0))"

# Run the preliminary hello world
python pytorch_mnist_numbers.py 

# Deactivate the environment
mamba deactivate

# Create tensorflow mamba environment
mamba create --name tensorflow-rocm python=3.10 -y
mamba activate tensorflow-rocm

# Was told to use this build in lieu of all the other version issues recently experienced
pip install http://ml-ci.amd.com:21096/job/tensorflow/job/nightly-rocmfork-develop-upstream/job/nightly-build-whl/lastSuccessfulBuild/artifact/packages-3.10/tf_nightly_rocm-2.16.0.600.dev20240109-cp310-cp310-manylinux2014_x86_64.whl

# Had to install this library as well
pip3 install requests

# Default way I test if tensorflow can see the GPU
python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"

# Clone this repo and change directory:
git clone https://github.com/vampireLibrarianMonk/amd-gpu-hello.git
cd amd-gpu-hello-main/

# Run the preliminary hello world
python tensorflow-rocm.py 
